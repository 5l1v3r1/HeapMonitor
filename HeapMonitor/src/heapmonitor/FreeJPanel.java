package heapmonitor;

import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author b0yd
 */
public class FreeJPanel extends javax.swing.JPanel {

    private final MainFrame parentFrame;  
    private boolean autoScroll = false;
    
    /**
     * Creates new form AllocationJPanel
     * @param parent
     */
    public FreeJPanel(  MainFrame parent ) {
        initComponents();
        initializeComponents();
        parentFrame = parent;     
    }
    
    //=======================================================================
    /**
     * 
     */
    private void initializeComponents() {
    
        DefaultListModel listModel = new DefaultListModel();
        freeJList.setModel(listModel);
        freeJList.setFont( new Font(Font.MONOSPACED, Font.PLAIN, 12 ));
        freeJList.addListSelectionListener( new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if( !e.getValueIsAdjusting()){
                    loadMemoryAddr();
                }
            }
        });
    }
    
    private void loadMemoryAddr(){
        MemoryChunk aChunk = (MemoryChunk)freeJList.getSelectedValue();
        if( aChunk != null ){
            parentFrame.getTracePanel().setStackTraceTextArea( aChunk );   
            parentFrame.getMemoryPanel().loadMemoryPage( aChunk.getAddress(), false );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        allocationScrollPane = new javax.swing.JScrollPane();

        allocationScrollPane.setBorder(null);
        allocationScrollPane.setPreferredSize(new java.awt.Dimension(45, 165));

        allocationScrollPane.setViewportView(freeJList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(allocationScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(allocationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane allocationScrollPane;
    private final javax.swing.JList freeJList = new javax.swing.JList();
    // End of variables declaration//GEN-END:variables

    //=======================================================================
    /**
     * 
     * @param aChunk 
     */
    public void addFree(MemoryChunk aChunk) {
        DefaultListModel listModel = (DefaultListModel) freeJList.getModel();
        listModel.removeElement( aChunk );
        listModel.addElement( aChunk );   
        
         //If autoscroll
        if( autoScroll ){
            int lastIndex = listModel.getSize() - 1;
            if (lastIndex >= 0) {
                freeJList.ensureIndexIsVisible(lastIndex);
            }
        }
    }

    //=======================================================================
    /**
     * 
     * @param aChunk 
     */
    public void removeMemoryChunk(MemoryChunk aChunk) {
        DefaultListModel listModel = (DefaultListModel) freeJList.getModel();
        listModel.removeElement( aChunk );
    }

    //=======================================================================
    /**
     * 
     */
    public void clearPanel() {
        DefaultListModel listModel = (DefaultListModel)freeJList.getModel();
        listModel.clear();
    }
    
    //=========================================================================
    /**
     * 
     * @param selected 
     */
    public void setAutoscrollFlag(boolean selected) {
        autoScroll = selected;
    }
}
